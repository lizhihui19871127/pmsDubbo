<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<bean id="parentDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="oracle.jdbc.OracleDriver" />
		<property name="minPoolSize" value="0" />
		<property name="maxPoolSize" value="200" />
		<property name="initialPoolSize" value="${db.initialPoolSize}" />
		<property name="maxIdleTime" value="1800" />
		<property name="checkoutTimeout" value="3000" />
	</bean>

	<!-- datasource -->
	<bean id="dataSource" parent="parentDataSource">
		<property name="jdbcUrl" value="${db.mnt.jdbcUrl}" />
		<property name="user" value="${db.mnt.user}" />
		<property name="password" value="${db.mnt.pwd}" />
	</bean>

    <!--<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">-->
        <!--<property name="jndiName">-->
            <!--<value>dxsinitek</value>-->
        <!--</property>-->

        <!--<property name="resourceRef">-->
            <!--<value>false</value>-->
        <!--</property>-->
        <!--<property name="jndiEnvironment">-->
            <!--<props>-->
                <!--<prop key="java.naming.provider.url">t3://localhost:7025</prop>-->
                <!--<prop key="java.naming.factory.initial">weblogic.jndi.WLInitialContextFactory</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

    <!--事务配置-->
    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" rollback-for="java.lang.Exception" read-only="false"  propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <tx:advice id="txAdvicenew" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" rollback-for="java.lang.Exception" read-only="false"  propagation="REQUIRES_NEW"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="txpc1" expression="execution(public * com.gffunds.common..*.addChannelBalance(..))
        or execution(public * com.gffunds.common..*.insertFastRedeemCustinfo(..))
        or execution(public * com.gffunds.common..*.minusChannelBalance(..))
        or execution(public * com.gffunds.common..*.resetFastRedeemCustinfo(..))
        or execution(public * com.gffunds.common..*.addFastRedeemLimit(..))
        or execution(public * com.gffunds.common..*.minusFastRedeemLimit(..))
        or execution(private * com.gffunds.service.tool..*.confirmshareFastRedeem(..))"/>
        <aop:advisor advice-ref="txAdvicenew" pointcut-ref="txpc1"/>
    </aop:config>

    <aop:config>
        <aop:pointcut id="txpc" expression="execution(public * com.gffunds.service.tool..*.*(..))
        and not execution(private * com.gffunds.service.tool..*.confirmshareFastRedeem(..))
        or execution(public * com.gffunds.service.investadv.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txpc"/>
    </aop:config>

    <!-- 创建SqlSessionFactory，同时指定数据源-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--<property name="configLocation" value="classpath*:spring/configuration.xml"/>-->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.xinwis.pms.dao" />
    </bean>

</beans>